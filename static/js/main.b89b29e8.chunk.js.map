{"version":3,"sources":["NavigationBar.js","sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Styles","styled","div","localStorage","getItem","free","document","getElementsByClassName","i","length","style","display","alert","p","NavigationBar","Navbar","expand","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","StyledSideNav","StyledNavItem","React","Component","props","active","NavItem","handleClick","path","onItemClick","this","to","tabIndex","css","onClick","name","NavIcon","App","btnTapped","bind","state","items","items2","items3","it","e","setState","loaddata","activePath","Fragment","map","item","dangerouslySetInnerHTML","__html","fetch","then","response","json","st","catch","err","console","log","j","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b89b29e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n  .navbar { background-color: #5a9de3; }\r\n  a, .navbar-nav, .navbar-light .nav-link {\r\n    color:#ffffff;\r\n    &:hover { color: white; }\r\n  }\r\n  .navbar-brand {\r\n    font-size: 1.4em;\r\n    color: #ffffff;\r\n    &:hover { color: white; }\r\n  }\r\n  .form-center {\r\n    position: absolute !important;\r\n    left: 25%;\r\n    right: 25%;\r\n  }\r\n`;\r\nfunction p(){\r\n  var free=document.getElementsByClassName(\"lo\");\r\n \r\n  for (var i = free.length - 1; i >= 0; i--) {\r\n    free[i].style.display=\"None\";\r\n    alert(\"s\");\r\n  }\r\n}\r\nvar p1=localStorage.getItem(\"logged\");\r\nif(p1===\"yes\"){\r\n  p();\r\n\r\n}\r\n\r\nexport const NavigationBar = () => (\r\n  <Styles>\r\n    <Navbar expand=\"lg\" className=\"btn-success\" >\r\n      <Navbar.Brand href=\"/\">E-Hub Test</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n               Nickson Kipkorir  \r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </Styles>\r\n)\r\n\r\nexport default  NavigationBar \r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\r\n\r\nconst StyledSideNav = styled.div`   \r\n    position: fixed;   \r\n    height: 100%;\r\n    width: 230px;     /* Set the width of the sidebar */\r\n    z-index: 1;      /* Stay on top of everything */\r\n    top: 3.7em;      /* Stay at the top */\r\n    background-color: #fff; /* Black */\r\n    overflow-x: hidden;     /* Disable horizontal scroll */\r\n    padding-top: 10px;\r\n    border: solid 1px lightgrey;\r\n`;\r\n\r\nclass SideNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activePath: props.location.pathname,\r\n            items: [\r\n                {\r\n                  path: '/', /* path is used as id to check which NavItem is active basically */\r\n                  name: 'Home',\r\n                  css: 'fas fa-home',\r\n                  key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\r\n                },\r\n                {\r\n                  path: '/progress',\r\n                  name: 'Enrolled Courses',\r\n                  css: 'fa fa-users',\r\n                  key: 2\r\n                },\r\n                {\r\n                  path: '/monitor1',\r\n                  name: 'Progress',\r\n                  css: 'fas fa-users',\r\n                  key: 3\r\n                },\r\n                 {\r\n                  path: '/about',\r\n                  name: 'About Us',\r\n                  css: 'fas fa-users',\r\n                  key: 4\r\n                },\r\n                 {\r\n                  path: '/report',\r\n                  name: 'Report Problem',\r\n                  css: 'fas fa-users',\r\n                  key: 5\r\n                },\r\n                 {\r\n                  path: '/logout',\r\n                  name: 'Logout',\r\n                  css: 'fas fa-users',\r\n                  key: 6\r\n                },\r\n              ]\r\n        }\r\n    }\r\n\r\n    onItemClick = (path) => {\r\n        this.setState({ activePath: path });\r\n    }\r\n\r\n    render() {\r\n        const { items, activePath } = this.state;\r\n        return(\r\n            <StyledSideNav>\r\n                {\r\n                    items.map((item) => {\r\n                        return (\r\n                            <NavItem \r\n                                path={item.path}\r\n                                name={item.name}\r\n                                css={item.css}\r\n                                onItemClick={this.onItemClick}\r\n                                active={item.path === activePath}\r\n                                key={item.key}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </StyledSideNav>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst StyledNavItem = styled.div`\r\n    height: 70px;\r\n    width: 75px; /* width must be same size as NavBar to center */\r\n    text-align: center; /* Aligns <a> inside of NavIcon div */\r\n    margin-left: 1em;\r\n    margin-bottom: 0;   /* Puts space between NavItems */\r\n    a {\r\n        font-size: 1.7em;\r\n        color: ${(props) => props.active ? \"#565656\" : \"DarkGray\"};\r\n        :hover {\r\n            opacity: 0.7;\r\n            text-decoration: none; /* Gets rid of underlining of icons */\r\n        }  \r\n    }\r\n`;\r\n\r\nclass NavItem extends React.Component {\r\n    handleClick = () => {\r\n        const { path, onItemClick } = this.props;\r\n        onItemClick(path);\r\n    }\r\n\r\n    render() {\r\n        const { active } = this.props;\r\n        return(\r\n            <StyledNavItem active={active}>\r\n                <Link to={this.props.path} tabIndex=\"name\" className={this.props.css} onClick={this.handleClick}>\r\n               { this.props.name}\r\n                    <NavIcon></NavIcon>\r\n                </Link>\r\n            </StyledNavItem>\r\n        );\r\n    }\r\n}\r\n\r\nconst NavIcon = styled.div`\r\n\r\n`;\r\n\r\nexport default SideNav","import React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport { NavigationBar } from './NavigationBar'\nimport { SideNav } from './sidebar'\nconst StyledSideNav = styled.div`   \n    position: fixed;   \n    height: 100%;\n   \n    z-index: 1;      /* Stay on top of everything */\n    top: 3.7em;      /* Stay at the top */\n    background-color: #fff; /* Black */\n    overflow-x: hidden;     /* Disable horizontal scroll */\n    padding-top: 10px;\n    border: solid 1px lightgrey;\n`;\n\nclass App extends React.Component {\n\t constructor(props) {\n        super(props);\n         this.btnTapped = this\n            .btnTapped\n            .bind(this);\n        this.state = {\n            items: [\n                {\n                 \n                  name: 'Fetching Data from Chucknorris .....',\n                  \n                },\n                  \n              ],\n              items2:\"Loading ......\", items3:\"Tap An Item to view contents\",it:\"animal\"\n\n\n        }\n\n    }\n      btnTapped(e) {\n\n\n      \tthis.setState({\n        items3: \"Displaying in a few ...\"\n      });\n      \t this.loaddata(e);\n       \n        \n    }\n    render() {\n        const { items, activePath } = this.state;\n        return(\n        \t  <React.Fragment>\n\n            \n        \t  <NavigationBar />\n            <StyledSideNav className=\"col-2\">\n                {\n                    items.map((item) => {\n                       \n                        \treturn (\n                  <div className=\"col-12\">\n                <a  className={this.props.css} onClick={e => this.btnTapped(item.name)}>\n               { item.name }\n                 \n                </a>\n                  <hr/>\n               \n            </div>)\n                        \n                    })\n                }\n            </StyledSideNav>\n   <div className=\"container\" >\n   <div className=\"row\">\n<div className=\"col-sm-2 col-lg-2 col-md-2 \">\n\n</div>\n   \n \n<div className=\"col-sm-8 col-lg-8 col-md-8 shadow p-3 mb-5 bg-white rounded\" onClick={this.btnTapped}>\n  <div dangerouslySetInnerHTML={{__html:this.state.items3}}></div>\n  </div>\n  \n   </div>\n   </div>\n      \n           </React.Fragment>\n        );\n    }\n    onItemClick = () => {\n        alert(\"hello\");\n    }\n    loaddata(e){\n\n     fetch(\"https://api.chucknorris.io/jokes/random?category=\"+e, {\n      \"method\": \"GET\"\n    })\n    .then(response => response.json())\n    .then(response => {\n    \t\n    \tvar st=\"<div>\";\n    \tst=st+\"<label>category:     \"+response['categories']+\"</label>\"\n    \tst=st+\"<br/>\"\n    \tst=st+\"<label>Joke Created At:     \"+response['created_at']+\"</label>\"\n    \tst=st+\"<br/>\"\n    \tst=st+\"<label>Joke Updated  At:     \"+response['updated_at']+\"</label>\"\n    \t\n    \tst=st+\"<br/>\"\n    \tst=st+\"<image src='\"+response['icon_url']+ \"'/>\";\n    \tst=st+\"<br/>\"\n    \tst=st+\"<label style={ color:'red' }>Joke Of the Day:     \"+response['value']+\"</label>\"\n    \tst=st+\"</div>\"\n\n      this.setState({\n        items3: st\n      })\n    })\n    .catch(err => { console.log(err); \n    });\n    }\n \n  componentDidMount() {\n   \n    fetch(\"https://api.chucknorris.io/jokes/categories\", {\n      \"method\": \"GET\"\n    })\n    .then(response => response.json())\n    .then(response => {\n    \t\n    \tvar st=[];\n    \tfor (var i = response.length - 1; i >= 0; i--) {\n    \t\tvar j={\"name\":response[i]};\n    \t\tst.push(j);\n    \t}\n    \t\n\n      this.setState({\n        items: st\n      })\n    })\n    .catch(err => { console.log(err); \n    });\n    this.loaddata(\"animal\");\n\n  }\n  showme(){\n  \talert(\"hello\");\n  }\n\n \n\n}\n\n\nclass NavItem extends React.Component  {\n   constructor(props) {\n      super(props);\n      \n    }\n\n    handleClick = () => {\n      alert(\"hello\");\n     var p2=new App();\n    p2.btnTapped();\n\n \n     \n    }\n\n\n    render() {\n        const { active } = this.props;\n        return(\n            <div className=\"col-12\">\n                <a  className={this.props.css} onClick={this.handleClick}>\n               { this.props.name}\n                   \n                </a>\n            </div>\n        );\n    }\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}